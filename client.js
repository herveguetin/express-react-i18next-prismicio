/**
 * Hervé Guétin's blog
 *
 * @license http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 * @author Hervé Guétin <@herveguetin> <herve.guetin@gmail.com>
 * @category Blog
 * @copyright Copyright (c) 2015 Hervé Guétin (http://www.herveguetin.com)
 */

var theme = require('./config/config').theme,
    _ = require('lodash');

/**
 * Init translations
 */
var i18n = require('i18next-client'),
    resBundle = require('i18next-resource-store-loader!./app/themes/' + theme + '/locales/index.js');
;

i18n.init({
    //debug: true, // Uncomment for debugging
    resStore: resBundle
});

/**
 * Load React components
 */
var React = require('react');

// Create a webpack require context with all js files in ./app/react
var reactComponents = require.context('./app/themes', true, /\/react\/.*\.js$/);

// Loop on reactComponents.keys() (all required files)
_.forEach(reactComponents.keys(), function(file) {

    // If file is not in theme, get out
    if (!(_.startsWith(file, './' + theme + '/'))) {
        return;
    }

    // Extract exported module from context
    var component = reactComponents(file);

    // Render component if its container is in the DOM
    if (document.getElementById(component.id)) {

        // REACT_PROPS var is a global var in DOM that is generated by the server
        // in order to make sure components are equal both on server and client.
        // @see app/models/reactComponentFactory.model.js
        var props = REACT_PROPS[component.id];

        props.__ = i18n.t; // Inject translator as __ prop

        React.render(
            React.createElement(component.component, props),
            document.getElementById(component.id)
        );
    }
});
